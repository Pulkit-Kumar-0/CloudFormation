AWSTemplateFormatVersion: 2010-09-09

Parameters:
  EnvironmentName:
    Description: Select the environment 
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prod
    ConstraintDescription: must be development or production      
  InstanceType: 
    Description: Select the EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - t2.small
      - t2.medium
  KeyName:
    Description: Key name to SSH to VM's. 
    Type: AWS::EC2::KeyPair::KeyName
  AvailabilityZone:
    Description: select the availability zone
    Type: String
    Default: ap-southeast-1a
    AllowedValues:
      - ap-southeast-1a
      - ap-southeast-1b
      - ap-southeast-1c

Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName, prod]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "EC2 Instance Configuration"    
        Parameters:
          - InstanceType
          - KeyName
          - AvailabilityZone  
      - Label:
          default: "Environment Configuration"          
        Parameters:
          - EnvironmentName  
    ParameterLabels:
      EnvironmentName:
        default: "Which environment we are planning to create this instance?"
      KeyName:
        default: "Be aware that once keyname is selected we cannot change it unless instance replaced"

Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My SG with port 22, 80, and 8080 inbound
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0

  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0e97ea97a2f374e3d
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      AvailabilityZone: !Ref AvailabilityZone
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData: 
        Fn::Base64: |  
          #!/bin/bash
          echo "Starting user data script" > /tmp/user-data.log
          sudo yum update -y >> /tmp/user-data.log 2>&1
          sudo amazon-linux-extras install nginx1 -y >> /tmp/user-data.log 2>&1
          sudo systemctl start nginx >> /tmp/user-data.log 2>&1
          sudo systemctl enable nginx >> /tmp/user-data.log 2>&1
          echo "Hello from Nginx" | sudo tee /usr/share/nginx/html/index.html >> /tmp/user-data.log 2>&1
          echo "User data script completed" >> /tmp/user-data.log

  MyProdEIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties: 
      InstanceId: !Ref MyVMInstance

Outputs:
  AppURL:
    Description: Nginx Web Server URL
    Value: !Sub 'http://${MyVMInstance.PublicDnsName}/index.html'
